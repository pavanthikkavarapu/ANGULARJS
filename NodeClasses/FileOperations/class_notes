Ex.

    text files
    json files
    xml files

        --
        --

File Operations.

1.Reading the File.
-----------------------------
FileOpearations
    raw
        sample.txt
-----------------------------
var fs = require("fs");
//Async Read
fs.readFile(__dirname+"/raw/sample.txt",function(err,data){
    console.log(data.toString());
});
//Sync Read
fs.readFileSync(__dirname+"/raw/"+__filename,function(err,data){
    console.log(data.toString());
});

1.__dirname -  is a predefined property in NodeJS
               used to read the Directory Path.

2.__filename - is a Predefined Property in NodeJS used to
               read the File Path.


[Note.
    If More Number Of Developers Acting on Single Resource , then
    Asynchronus Communication Recomended

    if Only One Developer Acting on Resource , then Syncronus Communication

    Recomended]


2. Open the File.

Syntax.

    fs.open(path,mode,callback)


Ex.

    fs.open(__dirname+"/raw/sample.txt","r+",function(err,data){
          console.log(data);
    });

    console.log("File Opened Successfully ! with read and write mode");


3.File Metadata.

    fs.stat(__dirname+"/raw/sample.txt",function(err,stats){
        console.log(stats.isFile);      //true

        console.log(stats.isDirectory);  //false

        console.log(stats.isCharacterStream);  //true

                --
                --
    });



    stat() is the predefined function in "fs" module
    used to read the metadata of files.


Writing the Data to the File.

writeFile("name of the file","data",handler);

    - it is a Predefined function in "fs" module
      used to write the data to the file.

    - it will override the existed file.


var fs = require("fs");
fs.writeFile(__dirname+"/sample.txt",
            "This is a writeFile function in fs module",
            function(err){
    if(err){
        return console.log(err);
    }
}

console.log("data written successfully !");

fs.readFile(__dirname+"/sample.txt",function(err,data){
    console.log(data.toString());
});


Read the file without junk data
-

read(fd,
     0,
     new Buffer(1024),
     0,
     new Buffer(1024).length(),
     function(err,data){

     console.log(data.toString());
});


arg1 - predefined file object

arg2 - Starting index in target page.

arg3 - Length Of the Buffer.

arg4 - Starting index in Buffer

arg5 - End index in Buffer

arg6 - handler


Ex.

var fs = require("fs");
var buf = new Buffer(100);

fs.open(__dirname+"/sample.txt","r+",function(fd,err){
    if(err){
        return console.log(err);
    }
});

console.log("File Opened With "r" and "w" mode);
fs.read(__dirname+"/sample.txt",0,buf,0,buf.length(),
        function(err,data){
    console.log(data.toString());
});
console.log("Reading Done with out Junk Data");


closing the file.

close("file description object",handler)

    - used to close the opened file.

fs.open(__dirname+"/sample.txt","r",function(fd,err){

});

fs.read(fd,0,new Buffer(1),0,new Buffer(1).length(),function(err,data){

});

fs.close(fd,function(err){
    if(err){
        console.log(err);
    }
});
console.log("file closed successfully");