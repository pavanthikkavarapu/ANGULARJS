 - Node Internally Provides the Terminal.

 - By using Integrated Terminal we can perform following Operations.

    1.Expressions   -- we can write expression

    2.Evaluation    -- we can evealuate expressions

    3.Read          -- we can read through terminal


Ex_1.

    a=50;
    50 will store into "a" and prints the result on terminal.

    var b=100;
    "100" will store into "b" and result won't print on console.

    c=a+b;
    "150" will print on console.

    var c=a+b;
    console.log(c);


Ex_2.
        "_" used to display the last result.

        >a=50;
            50
        >b=100;
            100;
        >c=a+b;
            150;
        > _
            150;
        >c= _;

            150;
        >var c=_;
            undefined;
        >console.log(c);
            150;

Ex_3.

    Executing the Sample Programs in REPL.
var x = 0;
do
{
    x++;
    console.log("x...."+x);
}while(x<10);

O/P:
1
2
3
4
5
6
7
8
9
10


console messages in nodejs.

node will support 3 types of console messages.

1.info

2.error

3.warn

Ex_1.
 console.log("This is info log");

 info logs will support format specifiers.

 console.log("%s","Info log with string specifier");
 console.log("%d",10);

        --
        --

Ex_2.

    in node we can display error logs also.

    console.error(new Error("This is Error Message"));


  O/P: Error: My Custom Error Message
            --
            --
            --


  "Error" is the Predefined class in NodeJS

  used to customize the Error Messages.


warn.

    in nodejs we can display the warn messages also.

Ex.

    console.warn("This is Warn Message in NodeJS");

    const var_one = 'variable d is undefined';

    console.warn(`.....${var_one}.....`);

    "variable d is undefined"




