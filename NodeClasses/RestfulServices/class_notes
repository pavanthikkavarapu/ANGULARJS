    - Providing the Communication between Different Technologies called as WebServices.

    - "express" is the web framework used to develop the Restful services in NodeJS.

Advantages Of Express Framework.

1.We Can develop the Single Page Applications.

2.we can implement the Routing in Node Application.

3.express applications are faster.

4.Recomended to use with I/O Opeartions.


Steps to Create the Restful Application by using express framework.

1.Download the express module.

package.json
-
{
    "dependencies":{
        "express":"^4.15.2"
    }
}

npm install

2.Develop the Node Application.
//import the express.
var express = require("express");
//create the server.
var app = express();
//create the type of request.
app.get("/",function(req,res){
    res.send("Default Restful Application Example !");
});
app.listen(8080);
console.log("Server Listening the port no.8080");

>npm start

>http://localhost:8080/


Example_2.

    Read the data from json file by using get request.

emp.json
-
{
    "emp1":{
        "id":1,
        "name":"Hello_1",
        "age":20
    },

    "emp2":{
            "id":2,
            "name":"Hello_2",
            "age":22
        },

    "emp3":{
            "id":3,
            "name":"Hello_3",
            "age":24
        }
}

var express  = require("express");
var fs = require("fs");
var app = express();
app.get("/emp",function(req,res){
    fs.readFile(__dirname+"/emp.json",function(err,data){
        res.send(data.toString());
    });
});
app.listen(8080);
console.log("Server Listening the Port No.8080");


> node readData.js

> http://localhost:8080/emp


post request.
-
    - As a developer we can send "post parameters" to server.
    - Based on the parameters server will send the response.

Accessing the Post parameters in NodeJS
-
Ex.

Client -- >  {"id":1};

Server
-
app.post("/",function(req,res){
    console.log(req.body.id);
});

'body' is the predefined property in NodeJS used to read the Post Parameters.



Example.

    Send the JSON Object as post parameter from AngularJS

    to Node Server.

post_server.js
-
var express = require("express");
var fs = require("fs");
var app = express();
app.post("/authenticate",function(req,res){
    //AngularJS ---> {"username":"admin","password":"admin"}
    if( (req.body.username)=='admin' && (req.body.password)=='admin'){
        fs.readFile(__dirname+"/emp.json",function(err,data){
            res.send(data);
        });
    }else{
        res.send({"error":404});
    };
});


<!DOCTYPE html>
<html ng-app="app" ng-controller="ctrl">
    <form ng-submit="postUserDetails({"username":uname,"password":upwd})">
        <label>Uname.</label>&emsp;
        <input type="text" ng-model="uname">
        <br><br>
        <label>Password</label>
        <input type="password" ng-model="upwd">
        <br><br>
        <input type="submit">
    </form>
    <h1>{{var_one}}</h1>
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.min.js"></script>
    <script>
        angular.module("app",[]).controller("ctrl",function($scope,$http){
            $scope.postUserDetails = function(data){
                $http.post("/authenticate",data).then(function(response){
                     $scope.var_one=response;
                });
            }
        });
    </script>
</html>

app.use(bodyparser.json());
    - set the json as the MIME Type

app.use(express.static(__dirname+"/../RestfulServices"));
    - used to attach the "public accessing folder"(Restful Services)
    - node server can access any resources from above folder.


app.get("/" , function(req,res){
   res.redirect("/post_example_one.html");
});
    - used to launch the default page when ever we start the server.


Append the Post Parameters to the flat file(emp.json).
AngularJS - {id:4,name:'Hello_4',age:26}

app.post("/addEmp",function(req,res){
    var id=req.body.id;
    var name = req.body.name;
    var age = req.body.age;
    fs.readFile(__dirname+"/emp.json",function(err,data){
        res.send(JSON.stringify(
                    (JSON.parse(data))[3]=
                        {"emp4":{'id':id,'name':name,'age':age}}
                    )
                );
    });
});





