Custom Directives.
    Creating our own directive based on Application Requirement called as Custom Directives.

    We Can use Custom Directives in 3 ways

        1.As an Element

        2.As an Attribute

        3.As an CSS Class


        Ex. -- my_directive

        <my_directive></my_directive> // Element

        <div my_directive></div>      // Attribute

        <div class="my_directive"></div>  //CSS Class Level Usage

    - Custom Directives used to reuse the common business requirement(Common UI).

Properties Of Custom Directives.
-
1.restrict
    - used to describe the usage of custom directive.

Ex.
      app.directive("my_directive" , my_directive);
      function my_directive(){
        return{
            restrict:'E' // we can use like an Element
            restrict:'A' // we can use like an Attribute
            restrict:'C' // we can use like an CSS Class
            restrict:'ACE' // we can use like an Element , CSS Class And Attribute
        }
      }

2.template
    - used to add the HTML to the Custom Directive.

Ex.

    app.directive("attrType",attrType);
    function attrType(){
        return{
            restrict:'A',
            template:"<div class='jumbotron'>Welcome to Custom Directive</div>"
        }
    }


    <h1 attr-type></h1>   // Welcome to Custom Directive


3.templateUrl.
    - used to attach the external templates to the custom directives.

    --------------
    templates
        sample.html
    --------------


    sample.html
    -
    <b>Welcome to Custom Directives</b>


    app.directive("elemType" , elemType);
    function elemType(){
        return{
            restrict:'E',
            templateUrl:'templates/sample.html'
        }
    }


    <elem-type></elem-type>  //Welcome to Custom Directives


4. controller
    - used to define the controller to the template of a custom directive.

Ex.
    ----------------
    templates
        sample.html
    ----------------

    sample.html
    -

    {{var_one}}

    ----------------
    controllers
        sample.js
    ----------------
    sample.js
    -
    app.controller("sample" , sample);
    sample.$inject = ["$scope"];
    function sample($scope){
        $scope.var_one  = "Welcome to Custom Directives";
    }


    -------------------
    directives
        classType.js
    -------------------

    app.directive("classType" , classType);
    function classType(){
        return{
            restrict:'C',
            templateUrl:'templates/sample.html',
            controller:'sample'
        }
    }

    index.html
    -
    <h1 class="class-type"></h1>    // Welcome to Custom Directives


------------------------
CustomDirectives

    Example_1

        index.html

        app.js

        directives

            attrType.js
            classType.js
            elemType.js

-------------------------

<!DOCTYPE html>
<html lang="en" ng-app="app">
    <div class="container" attr-type></div>   // Attribute Level Usage
    <br><br>
    <div class="container class-type"></div>   // CSS Class Level Usage
    <br><br>
    <div class="container">
        <elem-type></elem-type>                // Element Level Usage
    </div>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.0/angular.min.js"></script>
    <script src="app.js"></script>
    <script src="directives/attrType.js"></script>
    <script src="directives/classType.js"></script>
    <script src="directives/elemType.js"></script>
</html>


Example_2.

----------------------
templates
    header.html
----------------------

header.html
-

<div class="dropdown">
            -- makes the div as the dropdown

    <button class = "btn btn-primary dropdown-caret"
                    -- creating the style to the button

            data-toggle="dropdown">ClickMe</button>
            -- applying the jquery event

    <ul class = "dropdown-menu">
            - creating the menu.

        <li>Option_1</li>
        <li>Option_2</li>
        <li>Option_3</li>
        <li>Option_4</li>
        <li ng-click="logout()">Logout</li>
    </ul>
</div>

-----------------------
controllers
        header.js
-----------------------

app.controller("header" , header);
header.$inject = ["$scope"];
function header($scope){
    $scope.logout = function(){
        console.log("Logged Out Successfully !");
    }
}


-------------------------
directives
    header.js
-------------------------
app.directive("header" , header);
function header(){
    return{
        restrict:'E',
        templateUrl:'templates/header.html',
        controller:'header'
    }
}


index.html
-

<html ng-app="app">
    <header></header>
    <script src="bower_components / angular / angular.min.js"></script>
    <link rel="stylesheet" href="bower_components/bootstrap/dist/css/bootstrap.min.css"></link>
    <script src="bower_components/jquery/dist/jquery.min.js"></script>
    <script src="bower_components/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="app.js"></script>
    <script src="directives/header.js"></script>
    <script src="controllers / header.js"></script>
</html>




























